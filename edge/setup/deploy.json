{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "metadata": {
                "description": "Used to qualify the names of all of the resources created in this template."
            },
            "defaultValue": "lva",
            "type": "string",
            "minLength": 3,
            "maxLength": 20
        },
        "location": {
            "metadata": {
                "description": "By default, the resources will be created in the same location as the resource group."
            },
            "defaultValue": "[resourceGroup().location]",
            "type": "string"
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "product": "lva"
            }
        }
    },
    "variables": {
        "storageAccountName": "[tolower(concat(parameters('namePrefix'),'sa'))]",
        "amsAccountName": "[tolower(concat(parameters('namePrefix'),'ams'))]",
        "hubName": "[tolower(concat(parameters('namePrefix'),'hub'))]",
        "registryName": "[tolower(concat(parameters('namePrefix'),'reg'))]",
        "hubApiVersion": "2019-11-04",
        "vnetName": "[tolower(concat(parameters('namePrefix'),'-vnet'))]",
        "pipName": "[tolower(concat(parameters('namePrefix'),'-pip'))]"
    },
    "resources": [
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "comments": "A storage account is required to set up a Media Services account",
            "properties": {
                "accessTier": "Hot",
                "isHnsEnabled": true,
                "allowBlobPublicAccess": false
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Media/mediaServices",
            "comments": "LVA requires a Media Services account",
            "apiVersion": "2018-07-01",
            "name": "[variables('amsAccountName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "storageAccounts": [
                    {
                        "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                        "type": "Primary"
                    }
                ]
            },
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Devices/IotHubs",
            "comments": "LVA is hosted on an IoT Edge device. The host device is managed through an IoT Hub. The keys for accessing the hub are in the template's output.",
            "apiVersion": "[variables('hubApiVersion')]",
            "name": "[variables('hubName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "properties": {
            },
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "comments": "The basic sample scenarios do not require a registry. However, this will be used for more advanced scenarios.",
            "apiVersion": "2019-05-01",
            "name": "[variables('registryName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "adminUserEnabled": true
            },
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/26"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/27"
                        }
                    }
                ]
            },
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "comments": "This is the IP address used by VM.",
            "apiVersion": "2019-06-01",
            "name": "[variables('pipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": "[parameters('resourceTags')]"
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "hubKeys": {
            "value": "[listKeys(resourceId('Microsoft.Devices/IotHubs',variables('hubName')), variables('hubApiVersion'))]",
            "type": "object"
        },
        "roleName": {
            "type": "string",
            "value": "[concat(parameters('namePrefix'),'-cr')]"
        }
    }
}
